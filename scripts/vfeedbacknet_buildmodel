#!/usr/bin/env python3

import vfeedbacknet as v
import tensorflow as tf
import numpy as np
import sys

args = {
    'video_length' : 40,
    'video_height' : 176,
    'video_width' : 176,
    'train_batch_size' : 64
}
args['model_name'] = sys.argv[1]

labels_num2str = list(range(27))

x_input = tf.placeholder(tf.float32, [None, args['video_length'], args['video_height'], args['video_width']], name='x_input')
x_length = tf.placeholder(tf.int32, [None,], name='x_length')

assert(len(labels_num2str) == 27) # there should be 27 classes in the 20BN dataset
y_label = tf.placeholder(tf.float32, [None, len(labels_num2str)], name='y_label')
y_zeros = tf.placeholder(tf.float32, [None,],  name='y_zeros')
zeros = np.zeros((args['train_batch_size'],))

loss, predictions = eval("v.{}(args['video_length'], args['video_width'], args['video_height'], len(labels_num2str), x_input, x_length, y_label, y_zeros)".format(args['model_name']))
assert(loss is not None)
assert(predictions is not None)
print('Done!')
