#!/usr/bin/env python3

import argparse
import numpy as np
import tensorflow as tf

def main(args):
    
    npz_vars = np.load(args.npz_filename)
    print('\n'.join(npz_vars.keys()))
    
    config = tf.ConfigProto()
    config.allow_soft_placement = True
    with tf.Session(config=config) as sess:
        saver = tf.train.import_meta_graph(args.checkpoint_prefix+'.meta')
        saver.restore(sess, args.checkpoint_prefix)

        graph = tf.get_default_graph()
        #for op in graph.get_operations():
        #    print((op.name))
            
        for v in tf.trainable_variables(scope=None):
            if 'vfeedbacknet_base' in v.name:
                continue

            materialized_var = sess.run(v)
            same = np.array_equal(materialized_var, npz_vars[v.name])
            print(materialized_var.shape, same, v.name)
            
            
if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='')

    parser.add_argument('checkpoint_prefix', type=str, nargs=None,
                        help='path prefix to the model {metadata,data} to load')

    parser.add_argument('npz_filename', type=str, nargs=None,
                        help='path prefix to the model {metadata,data} to load')

    args = parser.parse_args()
    main(args)

